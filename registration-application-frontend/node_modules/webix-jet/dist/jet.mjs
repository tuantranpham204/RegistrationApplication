class y {
}
class b {
  constructor(t, e) {
    this.webixJet = !0, this.webix = t, this._events = [], this._subs = {}, this._data = {}, e && e.params && t.extend(this._data, e.params);
  }
  getRoot() {
    return this._root;
  }
  destructor() {
    this._detachEvents(), this._destroySubs(), this._events = this._container = this.app = this._parent = this._root = null;
  }
  setParam(t, e, s) {
    if (this._data[t] !== e && (this._data[t] = e, this._segment.update(t, e, 0), s))
      return this.show(null);
  }
  getParam(t, e) {
    const s = this._data[t];
    if (typeof s < "u" || !e)
      return s;
    const r = this.getParentView();
    if (r)
      return r.getParam(t, e);
  }
  getUrl() {
    return this._segment.suburl();
  }
  getUrlString() {
    return this._segment.toString();
  }
  getParentView() {
    return this._parent;
  }
  $$(t) {
    if (typeof t == "string") {
      const e = this.getRoot();
      return e.queryView(
        (s) => (s.config.id === t || s.config.localId === t) && s.$scope === e.$scope,
        "self"
      );
    } else
      return t;
  }
  on(t, e, s) {
    const r = t.attachEvent(e, s);
    return this._events.push({ obj: t, id: r }), r;
  }
  contains(t) {
    for (const e in this._subs) {
      const s = this._subs[e].view;
      if (s && (s === t || s.contains(t)))
        return !0;
    }
    return !1;
  }
  getSubView(t) {
    const e = this.getSubViewInfo(t);
    if (e)
      return e.subview.view;
  }
  getSubViewInfo(t) {
    const e = this._subs[t || "default"];
    return e ? { subview: e, parent: this } : t === "_top" ? (this._subs[t] = { url: "", id: null, popup: !0 }, this.getSubViewInfo(t)) : this._parent ? this._parent.getSubViewInfo(t) : null;
  }
  _detachEvents() {
    const t = this._events;
    for (let e = t.length - 1; e >= 0; e--)
      t[e].obj.detachEvent(t[e].id);
  }
  _destroySubs() {
    for (const t in this._subs) {
      const e = this._subs[t].view;
      e && e.destructor();
    }
    this._subs = {};
  }
  _init_url_data() {
    const t = this._segment.current();
    this._data = {}, this.webix.extend(this._data, t.params, !0);
  }
  _getDefaultSub() {
    if (this._subs.default)
      return this._subs.default;
    for (const t in this._subs) {
      const e = this._subs[t];
      if (!e.branch && e.view && t !== "_top") {
        const s = e.view._getDefaultSub();
        if (s)
          return s;
      }
    }
  }
  _routed_view() {
    const t = this.getParentView();
    if (!t)
      return !0;
    const e = t._getDefaultSub();
    return !e && e !== this ? !1 : t._routed_view();
  }
}
function U(i) {
  i[0] === "/" && (i = i.substr(1));
  const t = i.split("/"), e = [];
  for (let s = 0; s < t.length; s++) {
    const r = t[s], o = {};
    let n = r.indexOf(":");
    if (n === -1 && (n = r.indexOf("?")), n !== -1) {
      const a = r.substr(n + 1).split(/[\:\?\&]/g);
      for (const h of a) {
        const u = h.split("=");
        o[u[0]] = decodeURIComponent(u[1]);
      }
    }
    e[s] = {
      page: n > -1 ? r.substr(0, n) : r,
      params: o,
      isNew: !0
    };
  }
  return e;
}
function x(i) {
  const t = [];
  for (const e of i) {
    t.push("/" + e.page);
    const s = j(e.params);
    s && t.push("?" + s);
  }
  return t.join("");
}
function j(i) {
  const t = [];
  for (const e in i)
    typeof i[e] != "object" && (t.length && t.push("&"), t.push(e + "=" + encodeURIComponent(i[e])));
  return t.join("");
}
class m {
  constructor(t, e) {
    this._next = 1, typeof t == "string" ? this.route = {
      url: U(t),
      path: t
    } : this.route = t, this.index = e;
  }
  current() {
    return this.route.url[this.index];
  }
  next() {
    return this.route.url[this.index + this._next];
  }
  suburl() {
    return this.route.url.slice(this.index);
  }
  shift(t) {
    const e = new m(this.route, this.index + this._next);
    return e.setParams(e.route.url, t, e.index), e;
  }
  setParams(t, e, s) {
    if (e) {
      const o = t[s].params;
      for (var r in e)
        o[r] = e[r];
    }
  }
  refresh() {
    const t = this.route.url;
    for (let e = this.index + 1; e < t.length; e++)
      t[e].isNew = !0;
  }
  toString() {
    const t = x(this.suburl());
    return t ? t.substr(1) : "";
  }
  _join(t, e) {
    let s = this.route.url;
    if (t === null)
      return s;
    const r = this.route.url;
    let o = !0;
    if (s = r.slice(0, this.index + (e ? this._next : 0)), t) {
      s = s.concat(U(t));
      for (let n = 0; n < s.length; n++)
        r[n] && (s[n].view = r[n].view), o && r[n] && s[n].page === r[n].page ? s[n].isNew = !1 : s[n].isNew && (o = !1);
    }
    return s;
  }
  append(t) {
    const e = this._join(t, !0);
    return this.route.path = x(e), this.route.url = e, this.route.path;
  }
  show(t, e, s) {
    const r = this._join(t.url, s);
    return this.setParams(r, t.params, this.index + (s ? this._next : 0)), new Promise((o, n) => {
      const a = x(r), h = {
        url: r,
        redirect: a,
        confirm: Promise.resolve()
      }, u = e ? e.app : null;
      if (u && !u.callEvent("app:guard", [h.redirect, e, h])) {
        n(new y());
        return;
      }
      h.confirm.catch((l) => n(l)).then(() => {
        if (h.redirect === null) {
          n(new y());
          return;
        }
        if (h.redirect !== a) {
          u.show(h.redirect), n(new y());
          return;
        }
        this.route.path = a, this.route.url = r, o();
      });
    });
  }
  size(t) {
    this._next = t;
  }
  split() {
    const t = {
      url: this.route.url.slice(this.index + 1),
      path: ""
    };
    return t.url.length && (t.path = x(t.url)), new m(t, 0);
  }
  update(t, e, s) {
    const r = this.route.url[this.index + (s || 0)];
    if (!r)
      return this.route.url.push({ page: "", params: {} }), this.update(t, e, s);
    t === "" ? r.page = e : r.params[t] = e, this.route.path = x(this.route.url);
  }
}
class z extends b {
  constructor(t, e) {
    super(t.webix), this.app = t, this._children = [];
  }
  ui(t, e) {
    e = e || {};
    const s = e.container || t.container, r = this.app.createView(t);
    return this._children.push(r), r.render(s, this._segment, this), typeof t != "object" || t instanceof b ? r : r.getRoot();
  }
  show(t, e) {
    if (e = e || {}, typeof t == "object") {
      for (const s in t)
        this.setParam(s, t[s]);
      t = null;
    } else {
      if (t.substr(0, 1) === "/")
        return this.app.show(t, e);
      if (t.indexOf("./") === 0 && (t = t.substr(2)), t.indexOf("../") === 0) {
        const r = this.getParentView();
        return r ? r.show(t.substr(3), e) : this.app.show("/" + t.substr(3));
      }
      const s = this.getSubViewInfo(e.target);
      if (s) {
        if (s.parent !== this)
          return s.parent.show(t, e);
        if (e.target && e.target !== "default")
          return this._renderFrameLock(e.target, s.subview, {
            url: t,
            params: e.params
          });
      } else if (t)
        return this.app.show("/" + t, e);
    }
    return this._show(
      this._segment,
      { url: t, params: e.params },
      this
    );
  }
  _show(t, e, s) {
    return t.show(e, s, !0).then(() => (this._init_url_data(), this._urlChange())).then(() => {
      t.route.linkRouter && (this.app.getRouter().set(t.route.path, { silent: !0 }), this.app.callEvent("app:route", [t.route.path]));
    });
  }
  init(t, e) {
  }
  ready(t, e) {
  }
  config() {
    this.app.webix.message("View:Config is not implemented");
  }
  urlChange(t, e) {
  }
  destroy() {
  }
  destructor() {
    this.destroy(), this._destroyKids(), this._root && (this._root.destructor(), super.destructor());
  }
  use(t, e) {
    t(this.app, this, e);
  }
  refresh() {
    return this.getUrl(), this.destroy(), this._destroyKids(), this._destroySubs(), this._detachEvents(), this._container.tagName && this._root.destructor(), this._segment.refresh(), this._render(this._segment);
  }
  render(t, e, s) {
    typeof e == "string" && (e = new m(e, 0)), this._segment = e, this._parent = s, this._init_url_data(), t = t || document.body;
    const r = typeof t == "string" ? this.webix.toNode(t) : t;
    return this._container !== r ? (this._container = r, this._render(e)) : this._urlChange().then(() => this.getRoot());
  }
  _render(t) {
    const e = this.config();
    return e.then ? e.then((s) => this._render_final(s, t)) : this._render_final(e, t);
  }
  _render_final(t, e) {
    let s = null, r = null, o = !1;
    if (this._container.tagName ? r = this._container : (s = this._container, s.popup ? (r = document.body, o = !0) : r = this.webix.$$(s.id)), !this.app || !r)
      return Promise.reject(null);
    let n;
    const a = this._segment.current(), h = { ui: {} };
    this.app.copyConfig(t, h.ui, this._subs), this.app.callEvent("app:render", [this, e, h]), h.ui.$scope = this, !s && a.isNew && a.view && a.view.destructor();
    try {
      if (s && !o) {
        const l = r, f = l.getParentView();
        f && f.name === "multiview" && !h.ui.id && (h.ui.id = l.config.id);
      }
      this._root = this.app.webix.ui(h.ui, r);
      const u = this._root;
      o && u.setPosition && !u.isVisible() && u.show(), s && (s.view && s.view !== this && s.view !== this.app && s.view.destructor(), s.id = this._root.config.id, this.getParentView() || !this.app.app ? s.view = this : s.view = this.app), a.isNew && (a.view = this, a.isNew = !1), n = Promise.resolve(this._init(this._root, e)).then(() => this._urlChange().then(() => (this._initUrl = null, this.ready(this._root, e.suburl()))));
    } catch (u) {
      n = Promise.reject(u);
    }
    return n.catch((u) => this._initError(this, u));
  }
  _init(t, e) {
    return this.init(t, e.suburl());
  }
  _urlChange() {
    this.app.callEvent("app:urlchange", [this, this._segment]);
    const t = [];
    for (const e in this._subs) {
      const s = this._subs[e], r = this._renderFrameLock(e, s, null);
      r && t.push(r);
    }
    return Promise.all(t).then(() => this.urlChange(this._root, this._segment.suburl()));
  }
  _renderFrameLock(t, e, s) {
    if (!e.lock) {
      const r = this._renderFrame(t, e, s);
      r && (e.lock = r.then(() => e.lock = null, () => e.lock = null));
    }
    return e.lock;
  }
  _renderFrame(t, e, s) {
    if (t === "default")
      if (this._segment.next()) {
        let o = s ? s.params : null;
        return e.params && (o = this.webix.extend(o || {}, e.params)), this._createSubView(e, this._segment.shift(o));
      } else
        e.view && e.popup && (e.view.destructor(), e.view = null);
    if (s !== null && (e.url = s.url, e.params && (s.params = this.webix.extend(s.params || {}, e.params))), e.route) {
      if (s !== null)
        return e.route.show(s, e.view).then(() => this._createSubView(e, e.route));
      if (e.branch)
        return;
    }
    let r = e.view;
    if (!r && e.url) {
      if (typeof e.url == "string")
        return e.route = new m(e.url, 0), s && e.route.setParams(e.route.route.url, s.params, 0), e.params && e.route.setParams(e.route.route.url, e.params, 0), this._createSubView(e, e.route);
      if (typeof e.url == "function" && !(r instanceof e.url)) {
        const o = this.app._override(e.url);
        o.prototype instanceof V ? r = new o({ app: this.app }) : r = new o(this.app, "");
      }
      r || (r = e.url);
    }
    if (r)
      return r.render(e, e.route || this._segment, this);
  }
  _initError(t, e) {
    return this.app && this.app.error("app:error:initview", [e, t]), !0;
  }
  _createSubView(t, e) {
    return this.app.createFromURL(e.current()).then((s) => s.render(t, e, this));
  }
  _destroyKids() {
    const t = this._children;
    for (let e = t.length - 1; e >= 0; e--)
      t[e] && t[e].destructor && t[e].destructor();
    this._children = [];
  }
}
class W extends z {
  constructor(t, e) {
    super(t, e), this._ui = e.ui;
  }
  config() {
    return this._ui;
  }
}
class G {
  constructor(t, e, s) {
    this.path = "", this.app = s;
  }
  set(t, e) {
    this.path = t;
    const s = this.app;
    s.app.getRouter().set(s._segment.append(this.path), { silent: !0 });
  }
  get() {
    return this.path;
  }
}
let N = !0;
class V extends b {
  constructor(t) {
    const e = (t || {}).webix || window.webix;
    t = e.extend({
      name: "App",
      version: "1.0",
      start: "/home"
    }, t, !0), super(e, t), this.config = t, this.app = this.config.app, this.ready = Promise.resolve(), this._services = {}, this.webix.extend(this, this.webix.EventSystem);
  }
  getUrl() {
    return this._subSegment.suburl();
  }
  getUrlString() {
    return this._subSegment.toString();
  }
  getService(t) {
    let e = this._services[t];
    return typeof e == "function" && (e = this._services[t] = e(this)), e;
  }
  setService(t, e) {
    this._services[t] = e;
  }
  destructor() {
    this.getSubView().destructor(), super.destructor();
  }
  // copy object and collect extra handlers
  copyConfig(t, e, s) {
    if ((t instanceof b || typeof t == "function" && t.prototype instanceof b) && (t = { $subview: t }), typeof t.$subview < "u")
      return this.addSubView(t, e, s);
    const r = t instanceof Array;
    e = e || (r ? [] : {});
    for (const o in t) {
      let n = t[o];
      if (typeof n == "function" && n.prototype instanceof b && (n = { $subview: n }), n && typeof n == "object" && !(n instanceof this.webix.DataCollection) && !(n instanceof RegExp) && !(n instanceof Map))
        if (n instanceof Date)
          e[o] = new Date(n);
        else {
          const a = this.copyConfig(
            n,
            n instanceof Array ? [] : {},
            s
          );
          a !== null && (r ? e.push(a) : e[o] = a);
        }
      else
        e[o] = n;
    }
    return e;
  }
  getRouter() {
    return this.$router;
  }
  clickHandler(t, e) {
    if (t && (e = e || t.target || t.srcElement, e && e.getAttribute)) {
      const r = e.getAttribute("trigger");
      if (r)
        return this._forView(e, (n) => n.app.trigger(r)), t.cancelBubble = !0, t.preventDefault();
      const o = e.getAttribute("route");
      if (o)
        return this._forView(e, (n) => n.show(o)), t.cancelBubble = !0, t.preventDefault();
    }
    const s = e.parentNode;
    s && this.clickHandler(t, s);
  }
  getRoot() {
    return this.getSubView().getRoot();
  }
  refresh() {
    return this._subSegment ? this.getSubView().refresh().then((t) => (this.callEvent("app:route", [this.getUrl()]), t)) : Promise.resolve(null);
  }
  loadView(t) {
    const e = this.config.views;
    let s = null;
    if (t === "")
      return Promise.resolve(
        this._loadError("", new Error("Webix Jet: Empty url segment"))
      );
    try {
      e && (typeof e == "function" ? s = e(t) : s = e[t], typeof s == "string" && (t = s, s = null)), s || (t === "_hidden" ? s = { hidden: !0 } : t === "_blank" ? s = {} : (t = t.replace(/\./g, "/"), s = this.require("jet-views", t)));
    } catch (r) {
      s = this._loadError(t, r);
    }
    return s.then || (s = Promise.resolve(s)), s = s.then((r) => r.__esModule ? r.default : r).catch((r) => this._loadError(t, r)), s;
  }
  _forView(t, e) {
    const s = this.webix.$$(t);
    s && e(s.$scope);
  }
  _loadViewDynamic(t) {
    return null;
  }
  createFromURL(t) {
    let e;
    return t.isNew || !t.view ? e = this.loadView(t.page).then((s) => this.createView(s, "", t.params)) : e = Promise.resolve(t.view), e;
  }
  _override(t) {
    const e = this.config.override;
    if (e) {
      let s;
      for (; t; )
        s = t, t = e.get(t);
      return s;
    }
    return t;
  }
  createView(t, e, s) {
    t = this._override(t);
    let r;
    if (typeof t == "function") {
      if (t.prototype instanceof V)
        return new t({ app: this, name: e, params: s, router: G });
      if (t.prototype instanceof b)
        return new t(this, { name: e, params: s });
      t = t(this);
    }
    return t instanceof b ? r = t : r = new W(this, { name: e, ui: t }), r;
  }
  // show view path
  show(t, e) {
    return t && this.app && t.indexOf("//") == 0 ? this.app.show(t.substr(1), e) : this.render(this._container, t || this.config.start, e);
  }
  // event helpers
  trigger(t, ...e) {
    this.apply(t, e);
  }
  apply(t, e) {
    this.callEvent(t, e);
  }
  action(t) {
    return this.webix.bind(function(...e) {
      this.apply(t, e);
    }, this);
  }
  on(t, e) {
    this.attachEvent(t, e);
  }
  use(t, e) {
    t(this, null, e);
  }
  error(t, e) {
    if (this.callEvent(t, e), this.callEvent("app:error", e), this.config.debug) {
      for (var s = 0; s < e.length; s++)
        if (console.error(e[s]), e[s] instanceof Error) {
          let r = e[s].message;
          r.indexOf("Module build failed") === 0 ? (r = r.replace(/\x1b\[[0-9;]*m/g, ""), document.body.innerHTML = `<pre style='font-size:16px; background-color: #ec6873; color: #000; padding:10px;'>${r}</pre>`) : (r += "<br><br>Check console for more details", this.webix.message({ type: "error", text: r, expire: -1 }));
        }
      debugger;
    }
  }
  // renders top view
  render(t, e, s) {
    this._container = typeof t == "string" ? this.webix.toNode(t) : t || document.body;
    const r = !this.$router;
    let o = null;
    r ? (N && "tagName" in this._container && (this.webix.event(document.body, "click", (l) => this.clickHandler(l)), N = !1), typeof e == "string" && (e = new m(e, 0)), this._subSegment = this._first_start(e), this._subSegment.route.linkRouter = !0) : typeof e == "string" ? o = e : this.app ? o = e.split().route.path || this.config.start : o = e.toString();
    const n = s ? s.params : this.config.params || null, a = this.getSubView(), h = this._subSegment, u = h.show({ url: o, params: n }, a).then(() => this.createFromURL(h.current())).then((l) => l.render(t, h)).then((l) => (this.$router.set(h.route.path, { silent: !0 }), this.callEvent("app:route", [this.getUrl()]), l));
    return this.ready = this.ready.then(() => u), u;
  }
  getSubView() {
    if (this._subSegment) {
      const t = this._subSegment.current().view;
      if (t)
        return t;
    }
    return new z(this, {});
  }
  require(t, e) {
    return null;
  }
  _first_start(t) {
    this._segment = t;
    const e = (s) => setTimeout(() => {
      this.show(s).catch((r) => {
        if (!(r instanceof y))
          throw r;
      });
    }, 1);
    if (this.$router = new this.config.router(e, this.config, this), this._container === document.body && this.config.animation !== !1) {
      const s = this._container;
      this.webix.html.addCss(s, "webixappstart"), setTimeout(() => {
        this.webix.html.removeCss(s, "webixappstart"), this.webix.html.addCss(s, "webixapp");
      }, 10);
    }
    if (t) {
      if (this.app) {
        const s = t, r = t.current().view;
        t.current().view = this, t.next() ? (t.refresh(), t = t.split()) : t = new m(this.config.start, 0), s.current().view = r || this;
      }
    } else {
      let s = this.$router.get();
      s || (s = this.config.start, this.$router.set(s, { silent: !0 })), t = new m(s, 0);
    }
    return t;
  }
  // error during view resolving
  _loadError(t, e) {
    return this.error("app:error:resolve", [e, t]), { template: " " };
  }
  addSubView(t, e, s) {
    const r = t.$subview !== !0 ? t.$subview : null, o = t.name || (r ? this.webix.uid() : "default");
    return e.id = t.id || "s" + this.webix.uid(), (s[o] = {
      id: e.id,
      url: r,
      branch: t.branch,
      popup: t.popup,
      params: t.params
    }).popup ? null : e;
  }
}
class K {
  constructor(t, e) {
    this.config = e || {}, this._detectPrefix(), this.cb = t, window.onpopstate = () => this.cb(this.get());
  }
  set(t, e) {
    if (this.config.routes) {
      const s = t.split("?", 2);
      for (const r in this.config.routes)
        if (this.config.routes[r] === s[0]) {
          t = r + (s.length > 1 ? "?" + s[1] : "");
          break;
        }
    }
    this.get() !== t && window.history.pushState(null, null, this.prefix + this.sufix + t), (!e || !e.silent) && setTimeout(() => this.cb(t), 1);
  }
  get() {
    let t = this._getRaw().replace(this.prefix, "").replace(this.sufix, "");
    if (t = t !== "/" && t !== "#" ? t : "", this.config.routes) {
      const e = t.split("?", 2), s = this.config.routes[e[0]];
      s && (t = s + (e.length > 1 ? "?" + e[1] : ""));
    }
    return t;
  }
  _detectPrefix() {
    const t = this.config.routerPrefix;
    this.sufix = "#" + (typeof t > "u" ? "!" : t), this.prefix = document.location.href.split("#", 2)[0];
  }
  _getRaw() {
    return document.location.href;
  }
}
let A = !1;
function O(i) {
  if (A || !i)
    return;
  A = !0;
  const t = window;
  t.Promise || (t.Promise = i.promise);
  const e = i.version.split(".");
  e[0] * 10 + e[1] * 1 < 53 && (i.ui.freeze = function(n) {
    const a = n();
    return a && a.then ? a.then(function(h) {
      return i.ui.$freeze = !1, i.ui.resize(), h;
    }) : (i.ui.$freeze = !1, i.ui.resize()), a;
  });
  const s = i.ui.baselayout.prototype.addView, r = i.ui.baselayout.prototype.removeView, o = {
    addView(n, a) {
      if (this.$scope && this.$scope.webixJet && !n.queryView) {
        const h = this.$scope, u = {};
        n = h.app.copyConfig(n, {}, u), s.apply(this, [n, a]);
        for (const l in u)
          h._renderFrame(l, u[l], null).then(() => {
            h._subs[l] = u[l];
          });
        return n.id;
      } else
        return s.apply(this, arguments);
    },
    removeView() {
      if (r.apply(this, arguments), this.$scope && this.$scope.webixJet) {
        const n = this.$scope._subs;
        for (const a in n) {
          const h = n[a];
          i.$$(h.id) || (h.view.destructor(), delete n[a]);
        }
      }
    }
  };
  i.extend(i.ui.layout.prototype, o, !0), i.extend(i.ui.baselayout.prototype, o, !0), i.protoUI({
    name: "jetapp",
    $init(n) {
      this.$app = new this.app(n);
      const a = i.uid().toString();
      n.body = { id: a }, this.$ready.push(function() {
        this.callEvent("onInit", [this.$app]), this.$app.render({ id: a });
      });
    }
  }, i.ui.proxy, i.EventSystem);
}
class wt extends V {
  constructor(t) {
    t.router = t.router || K, super(t), O(this.webix);
  }
  require(t, e) {
    return require(t + "/" + e);
  }
}
class bt {
  constructor(t, e, s) {
    this.storage = e.storage || s.webix.storage.session, this.name = e.storeName || e.id + ":route", this.cb = t;
  }
  set(t, e) {
    this.storage.put(this.name, t), (!e || !e.silent) && setTimeout(() => this.cb(t), 1);
  }
  get() {
    return this.storage.get(this.name);
  }
}
class mt extends K {
  _detectPrefix() {
    this.prefix = "", this.sufix = this.config.routerPrefix || "";
  }
  _getRaw() {
    return document.location.pathname + (document.location.search || "");
  }
}
class yt {
  constructor(t, e) {
    this.path = "", this.cb = t;
  }
  set(t, e) {
    this.path = t, (!e || !e.silent) && setTimeout(() => this.cb(t), 1);
  }
  get() {
    return this.path;
  }
}
function Z(i, t, e) {
  t.on(i, "app:guard", function(s, r, o) {
    if (r === t || r.contains(t)) {
      const n = e();
      n === !1 ? o.confirm = Promise.reject(new y()) : o.confirm = o.confirm.then(() => n);
    }
  });
}
function k(i, t) {
  return Object.prototype.hasOwnProperty.call(i, t);
}
function $(i, t, e) {
  for (var s in i)
    k(i, s) && t.call(e || i, i[s], s, i);
}
function Q(i) {
  return i.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
}
function X(i) {
  i = "Warning: " + i, typeof console < "u" && console.error(i);
  try {
    throw new Error(i);
  } catch {
  }
}
var I = String.prototype.replace, H = String.prototype.split, S = "||||", P = function(i) {
  var t = i % 10;
  return i !== 11 && t === 1 ? 0 : 2 <= t && t <= 4 && !(i >= 12 && i <= 14) ? 1 : 2;
}, Y = {
  arabic: function(i) {
    if (i < 3)
      return i;
    var t = i % 100;
    return t >= 3 && t <= 10 ? 3 : t >= 11 ? 4 : 5;
  },
  bosnian_serbian: P,
  chinese: function() {
    return 0;
  },
  croatian: P,
  french: function(i) {
    return i > 1 ? 1 : 0;
  },
  german: function(i) {
    return i !== 1 ? 1 : 0;
  },
  russian: P,
  lithuanian: function(i) {
    return i % 10 === 1 && i % 100 !== 11 ? 0 : i % 10 >= 2 && i % 10 <= 9 && (i % 100 < 11 || i % 100 > 19) ? 1 : 2;
  },
  czech: function(i) {
    return i === 1 ? 0 : i >= 2 && i <= 4 ? 1 : 2;
  },
  polish: function(i) {
    if (i === 1)
      return 0;
    var t = i % 10;
    return 2 <= t && t <= 4 && (i % 100 < 10 || i % 100 >= 20) ? 1 : 2;
  },
  icelandic: function(i) {
    return i % 10 !== 1 || i % 100 === 11 ? 1 : 0;
  },
  slovenian: function(i) {
    var t = i % 100;
    return t === 1 ? 0 : t === 2 ? 1 : t === 3 || t === 4 ? 2 : 3;
  }
}, tt = {
  arabic: ["ar"],
  bosnian_serbian: ["bs-Latn-BA", "bs-Cyrl-BA", "srl-RS", "sr-RS"],
  chinese: ["id", "id-ID", "ja", "ko", "ko-KR", "lo", "ms", "th", "th-TH", "zh"],
  croatian: ["hr", "hr-HR"],
  german: ["fa", "da", "de", "en", "es", "fi", "el", "he", "hi-IN", "hu", "hu-HU", "it", "nl", "no", "pt", "sv", "tr"],
  french: ["fr", "tl", "pt-br"],
  russian: ["ru", "ru-RU"],
  lithuanian: ["lt"],
  czech: ["cs", "cs-CZ", "sk"],
  polish: ["pl"],
  icelandic: ["is"],
  slovenian: ["sl-SL"]
};
function et(i) {
  var t = {};
  return $(i, function(e, s) {
    $(e, function(r) {
      t[r] = s;
    });
  }), t;
}
function st(i) {
  var t = et(tt);
  return t[i] || t[H.call(i, /-/, 1)[0]] || t.en;
}
function it(i, t) {
  return Y[st(i)](t);
}
function T(i) {
  return i.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}
function rt(i) {
  var t = i && i.prefix || "%{", e = i && i.suffix || "}";
  if (t === S || e === S)
    throw new RangeError('"' + S + '" token is reserved for pluralization');
  return new RegExp(T(t) + "(.*?)" + T(e), "g");
}
var nt = /\$/g, ot = "$$", ut = /%\{(.*?)\}/g;
function R(i, t, e, s) {
  if (typeof i != "string")
    throw new TypeError("Polyglot.transformPhrase expects argument #1 to be string");
  if (t == null)
    return i;
  var r = i, o = s || ut, n = typeof t == "number" ? { smart_count: t } : t;
  if (n.smart_count != null && r) {
    var a = H.call(r, S);
    r = Q(a[it(e || "en", n.smart_count)] || a[0]);
  }
  return r = I.call(r, o, function(h, u) {
    return !k(n, u) || n[u] == null ? h : I.call(n[u], nt, ot);
  }), r;
}
function w(i) {
  var t = i || {};
  this.phrases = {}, this.extend(t.phrases || {}), this.currentLocale = t.locale || "en";
  var e = t.allowMissing ? R : null;
  this.onMissingKey = typeof t.onMissingKey == "function" ? t.onMissingKey : e, this.warn = t.warn || X, this.tokenRegex = rt(t.interpolation);
}
w.prototype.locale = function(i) {
  return i && (this.currentLocale = i), this.currentLocale;
};
w.prototype.extend = function(i, t) {
  $(i, function(e, s) {
    var r = t ? t + "." + s : s;
    typeof e == "object" ? this.extend(e, r) : this.phrases[r] = e;
  }, this);
};
w.prototype.unset = function(i, t) {
  typeof i == "string" ? delete this.phrases[i] : $(i, function(e, s) {
    var r = t ? t + "." + s : s;
    typeof e == "object" ? this.unset(e, r) : delete this.phrases[r];
  }, this);
};
w.prototype.clear = function() {
  this.phrases = {};
};
w.prototype.replace = function(i) {
  this.clear(), this.extend(i);
};
w.prototype.t = function(i, t) {
  var e, s, r = t ?? {};
  if (typeof this.phrases[i] == "string")
    e = this.phrases[i];
  else if (typeof r._ == "string")
    e = r._;
  else if (this.onMissingKey) {
    var o = this.onMissingKey;
    s = o(i, r, this.currentLocale, this.tokenRegex);
  } else
    this.warn('Missing translation for key: "' + i + '"'), s = i;
  return typeof e == "string" && (s = R(e, r, this.currentLocale, this.tokenRegex)), s;
};
w.prototype.has = function(i) {
  return k(this.phrases, i);
};
w.transformPhrase = function(i, t, e) {
  return R(i, t, e);
};
function at(i, t, e) {
  e = e || {};
  const s = e.storage;
  let r = s ? s.get("lang") || "en" : e.lang || "en";
  function o(u, l, f) {
    l.__esModule && (l = l.default);
    const c = { phrases: l };
    e.polyglot && i.webix.extend(c, e.polyglot);
    const p = h.polyglot = new w(c);
    if (p.locale(u), h._ = i.webix.bind(p.t, p), r = u, s && s.put("lang", r), e.webix) {
      const g = e.webix[u];
      g && i.webix.i18n.setLocale(g);
    }
    return f ? Promise.resolve() : i.refresh();
  }
  function n() {
    return r;
  }
  function a(u, l) {
    if (e.path === !1)
      return;
    if (typeof e.path == "function") {
      e.path(u).then((p) => o(u, p, l));
      return;
    }
    const f = (e.path ? e.path + "/" : "") + u, c = i.require("jet-locales", f);
    o(u, c, l);
  }
  const h = {
    getLang: n,
    setLang: a,
    setLangData: o,
    _: null,
    polyglot: null
  };
  i.setService("locale", h), a(r, !0);
}
function F(i, t, e) {
  t.urls ? e = t.urls[e] || e : t.param && (e = { [t.param]: e }), i.show(e);
}
function ht(i, t, e) {
  const s = t.getSubViewInfo().parent, r = t.$$(e.id || e);
  let o = !1;
  r.attachEvent("onchange", function() {
    o || F(s, e, this.getValue());
  }), r.attachEvent("onafterselect", function() {
    if (!o) {
      let n = null;
      r.setValue ? n = this.getValue() : r.getSelectedId && (n = r.getSelectedId()), F(s, e, n);
    }
  }), t.on(i, "app:route", function() {
    let n = "";
    if (e.param)
      n = t.getParam(e.param, !0);
    else {
      const a = s.getUrl()[1];
      a && (n = a.page);
    }
    n && (o = !0, r.setValue && r.getValue() !== n ? r.setValue(n) : r.select && r.exists(n) && r.getSelectedId() !== n && r.select(n), o = !1);
  });
}
const lt = {
  good: "check",
  error: "warning",
  saving: "refresh fa-spin"
}, ct = {
  good: "Ok",
  error: "Error",
  saving: "Connecting..."
};
function ft(i, t, e) {
  let s = "good", r = 0, o = !1, n = e.expire;
  !n && n !== !1 && (n = 2e3);
  const a = e.texts || ct, h = e.icons || lt;
  typeof e == "string" && (e = { target: e });
  function u(d) {
    const _ = t.$$(e.target);
    _ && (d || (d = "<div class='status_" + s + "'><span class='webix_icon fa-" + h[s] + "'></span> " + a[s] + "</div>"), _.setHTML(d));
  }
  function l() {
    r--, v("good");
  }
  function f(d) {
    r--, v("error", d);
  }
  function c(d) {
    r++, v("saving"), d && d.then && d.then(l, f);
  }
  function p() {
    return s;
  }
  function g() {
    r === 0 && u(" ");
  }
  function v(d, _) {
    r < 0 && (r = 0), d === "saving" ? (s = "saving", u()) : (o = d === "error", r === 0 && (s = o ? "error" : "good", o ? i.error("app:error:server", [_.responseText || _]) : n && setTimeout(g, n), u()));
  }
  function L(d) {
    const _ = i.webix.dp(d);
    _ && (t.on(_, "onAfterDataSend", c), t.on(_, "onAfterSaveError", (q, B, C) => f(C)), t.on(_, "onAfterSave", l));
  }
  i.setService("status", {
    getStatus: p,
    setStatus: v,
    track: L
  }), e.remote && t.on(i.webix, "onRemoteCall", c), e.ajax && t.on(
    i.webix,
    "onBeforeAjax",
    (d, _, q, B, C, _t, J) => {
      c(J);
    }
  ), e.data && L(e.data);
}
function pt(i, t, e) {
  e = e || {};
  const s = e.storage;
  let r = s ? s.get("theme") || "material-default" : e.theme || "material-default";
  const o = {
    getTheme() {
      return r;
    },
    setTheme(n, a) {
      const h = n.split("-"), u = document.getElementsByTagName("link");
      for (let l = 0; l < u.length; l++) {
        const f = u[l].getAttribute("title");
        f && (f === n || f === h[0] ? u[l].disabled = !1 : u[l].disabled = !0);
      }
      i.webix.skin.set(h[0]), i.webix.html.removeCss(document.body, "theme-" + r), i.webix.html.addCss(document.body, "theme-" + n), r = n, s && s.put("theme", n), a || i.refresh();
    }
  };
  i.setService("theme", o), o.setTheme(r, !0);
}
function M(i, t, e) {
  for (let s = 0; s < e.length; s++)
    i[e[s]] = t[s + 1] ? t[s + 1].page : "";
}
function dt(i, t, e) {
  const s = e.route || e, r = {};
  t.on(i, "app:urlchange", function(a, h) {
    t === a && (M(r, h.suburl(), s), h.size(s.length + 1));
  });
  const o = t.setParam, n = t.getParam;
  t.setParam = function(a, h, u) {
    const l = s.indexOf(a);
    if (l >= 0) {
      if (r[a] = h, this._segment.update("", h, l + 1), u)
        return t.show(null);
    } else
      return o.call(this, a, h, u);
  }, t.getParam = function(a, h) {
    const u = r[a];
    return typeof u < "u" ? u : n.call(this, a, h);
  }, M(r, t.getUrl(), s);
}
function gt(i, t, e) {
  e = e || {};
  const s = e.login || "/login", r = e.logout || "/logout", o = e.afterLogin || i.config.start, n = e.afterLogout || "/login", a = e.ping || 5 * 60 * 1e3, h = e.model;
  let u = e.user;
  const l = {
    getUser() {
      return u;
    },
    getStatus(c) {
      return c ? h.status().catch(() => null).then((p) => {
        u = p;
      }) : u !== null;
    },
    login(c, p) {
      return h.login(c, p).then((g) => {
        if (u = g, !g)
          throw new Error("Access denied");
        i.callEvent("app:user:login", [u]), i.show(o);
      });
    },
    logout() {
      return u = null, h.logout().then((c) => (i.callEvent("app:user:logout", []), c));
    }
  };
  function f(c, p) {
    c === r ? (l.logout(), p.redirect = n) : c !== s && !l.getStatus() && (p.redirect = s);
  }
  i.setService("user", l), i.attachEvent("app:guard", function(c, p, g) {
    return e.public && e.public(c) ? !0 : (typeof u > "u" && (g.confirm = l.getStatus(!0).then(() => f(c, g))), f(c, g));
  }), a && setInterval(() => l.getStatus(!0), a);
}
let D = window.webix;
D && O(D);
const xt = {
  UnloadGuard: Z,
  Locale: at,
  Menu: ht,
  Theme: pt,
  User: gt,
  Status: ft,
  UrlParam: dt
}, vt = { NavigationBlocked: y }, E = window;
E.Promise || (E.Promise = E.webix.promise);
export {
  yt as EmptyRouter,
  K as HashRouter,
  wt as JetApp,
  z as JetView,
  bt as StoreRouter,
  G as SubRouter,
  mt as UrlRouter,
  vt as errors,
  O as patch,
  xt as plugins
};
